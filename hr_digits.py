# -*- coding: utf-8 -*-
"""HR_digits.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/151Yl1y81DwOO5I4SVnYFrlrRUGB-Pi6J
"""

import numpy as np

import numpy
from keras.datasets import mnist
from keras.models import Sequential
from keras.layers import Dense
from keras.layers import Dropout
from keras.utils import np_utils

import matplotlib.pyplot as plt

(X_train,Y_train),(X_test,Y_test) = mnist.load_data()

X_train.shape

X_test.shape

plt.imshow(X_train[1])
plt.show()

np.random.seed(7)

X_train = X_train.reshape(X_train.shape[0],784)
X_test = X_test.reshape(X_test.shape[0],784)

X_train[0].shape

X_train = X_train/255.0
X_test = X_test/255.0

"""# Convert Output Vector to one hot encoded vectors"""

Y_train = np_utils.to_categorical(Y_train)
Y=Y_test
Y_test = np_utils.to_categorical(Y_test)

Y_train[0].shape

model = Sequential()
model.add(Dense(units=784, activation='relu', input_dim=784))
model.add(Dense(units=64, activation='relu'))
model.add(Dense(units=10, activation='softmax'))

model.summary()

model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])

model.fit(X_train,Y_train,epochs=20,batch_size=200,verbose=2)

scores = model.evaluate(X_test,Y_test)

print(scores)

y_test = model.predict_classes(X_test)

img_ = X_test[0].reshape(28,28)
plt.imshow(img_)
plt.show()
y_test[0]

y_test[0]

"""# **Now , we will proceed with method CNN **"""

